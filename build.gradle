/*
 * Copyright 2019 Google LLC
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

plugins {
    id 'maven-publish'
    id 'signing'
}

description = 'Cloud Build Artifacts Maven Tools'

allprojects {
    apply plugin: 'java'
    apply plugin: 'maven'
    group = 'com.google.cloud.buildartifacts'
    version = '1.1.3'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
    }
    repositories {
        jcenter()
    }
}

subprojects {
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    artifacts {
        archives sourcesJar
        archives javadocJar
    }
}

def commonPomAttributes(pom) {
    pom.url = "https://github.com/GoogleCloudPlatform/build-artifacts-maven-tools"
    pom.developers {
        developer {
            organization= "Google LLC"
            organizationUrl= "http://www.google.com"
        }
    }
    pom.licenses {
        license {
            name = 'The Apache License, Version 2.0'
            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
        }
    }
    pom.scm {
        connection = "scm:git:https://github.com/GoogleCloudPlatform/build-artifacts-maven-tools.git"
        developerConnection = "scm:git:https://github.com/GoogleCloudPlatform/build-artifacts-maven-tools.git"
        url = "https://github.com/GoogleCloudPlatform/build-artifacts-maven-tools"
    }
}

publishing {
    publications {
        wagon(MavenPublication) {
            artifactId = "buildartifacts-maven-wagon"
            def project = project(":buildartifacts-maven-wagon")
            from project.components.java
            artifact(project.sourcesJar) {
                classifier = 'sources'
            }
            artifact(project.javadocJar) {
                classifier = 'javadoc'
            }
            commonPomAttributes(pom)
            pom {
                name = 'Cloud Build Artifacts Maven Wagon'
                description = 'A Maven wagon used to connect to Cloud Build Artifacts Maven repositories.'
            }
        }
        authCommon(MavenPublication) {
            artifactId = "buildartifacts-auth-common"
            def project = project(":buildartifacts-auth-common")
            from project.components.java
            artifact(project.sourcesJar) {
                classifier = 'sources'
            }
            artifact(project.javadocJar) {
                classifier = 'javadoc'
            }
            commonPomAttributes(pom)
            pom {
                name = 'Cloud Build Artifacts common authentication library'
                description = 'Common authentication library for connecting to Cloud Build Artifacts.'
            }
        }
    }
    repositories {
        mavenLocal()
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            if (rootProject.hasProperty("ossrhUsername") && rootProject.hasProperty("ossrhPassword")) {
                credentials {
                    username ossrhUsername
                    password ossrhPassword
                }
            }
        }
    }
}

project(":buildartifacts-maven-wagon") {
    dependencies {
        compile project(":buildartifacts-auth-common")
    }
}

project(":buildartifacts-gradle-plugin") {
    dependencies {
        compile project(":buildartifacts-auth-common")
    }
}

signing {
    sign publishing.publications.wagon
    sign publishing.publications.authCommon
}
